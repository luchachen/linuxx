From a4c8f8645e8183c0d511e65339a94089af9ccccf Mon Sep 17 00:00:00 2001
From: milktime <1014708050@qq.com>
Date: Fri, 26 Mar 2021 15:55:15 +0800
Subject: [PATCH 03/12] usage of pagecache-limit based on cgroup

---
 README.md | 42 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)

diff --git a/README.md b/README.md
index 6a28ab3dc..e992fec53 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1,44 @@
 # linux-cgroup2-pagecache-limit
 Add a new mechanic to cgroup-v2 and implement the control of page-cache.
+Our linux version is 4.15.0 and the directory **linux-source-4.15.0** is the corresponding source code tree.
+
+## modified files
+To implement the new pagecache-limit mechanic, I modified the following files.
+- include/linux/memcontrol.h
+- mm/filemap.c
+- mm/memcontrol.c
+- mm/vmscan.c
+If you use other versions of linux, please replace these files.
+
+## how to use
+You can install the new kernel following the instructions below:
+```bash
+# click Kernel hacking -> Complie-time checks -> conpile the kernel with debug info
+# generate drarf4 debuginfo
+# provide GDB scripts for kernel debugging
+make menuconfig
+make -j8
+make install 
+make modules_install
+```
+Then you can boot the new kernel through GRUB. Before you boot the new kernel, you shold firstly disable the cgroup-v1 to allow cgroup-v2 using all sub-system:
+```bash
+vim /etc/default/grub
+# append cgroup_no_v1=all to GRUB_CMDLINE_LINUX
+update-grup
+```
+After you boot the new kernel:
+```bash
+cd /sys/fs/cgroup/unified
+echo '+memory' >cgroup.subtree_control
+mkdir test & cd test & ls
+```
+You will see two new user interface files which is using to catch the usage of pagecache and the limitation of pagecache and you can use them like other user interface files. 
+- `memory.pagecache_current`
+- `memory.pagecache_limit`
+
+## test
+Run the scripts **run_pagecache_test.sh**. The script use dd to copy a file of 500M, and it limit the pagecache to 100M. After copying, you can use `cat memory.pagecache_current` to see how many bytes the dd process used. And you can also use `free -h` to see increments in buffer/cache usage.
+At the same time, we provide a simple program to test, **test.c**, you can replace dd cmd with `./test` to do more tests. 
+
+
-- 
2.44.0

